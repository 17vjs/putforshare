{"version":3,"sources":["Auth/Authentication.js","components/Form/PersonForm.js","components/Home/Home.js","components/Form/Form.js","ProtectedRoute/ProtectedRoute.js","ProtectedRoute/ProtectedRouteLogin.js","App.js","serviceWorker.js","index.js"],"names":["this","authenticated","cb","PersonForm","props","useState","name","email","mobile","profilePic","multiple","persons","state","setState","handleChange","e","target","id","value","console","log","prevState","className","checked","onChange","type","htmlFor","event","file","files","alert","onClick","preventDefault","length","formData","FormData","append","payload","concat","axios","post","then","response","status","data","res","catch","error","style","display","successMessage","role","images","i","person","entries","pair","map","item","key","indexOf","withRouter","getAllPersons","get","useEffect","href","Auth","isAuthenticated","logout","history","push","onSelect","index","src","height","width","username","password","login","ProtectedRoute","Component","component","rest","render","to","pathname","from","location","ProtectedRouteLogin","App","exact","path","Form","Home","color","backgroundColor","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.8f228652.chunk.js","sourcesContent":["class Auth {\r\n  authenticated;\r\n  constructor() {\r\n    this.authenticated = false;\r\n\r\n  }\r\n  login(cb) {\r\n    this.authenticated = true;\r\n    cb();\r\n  }\r\n  logout(cb) {\r\n    this.authenticated = false;\r\n    cb();\r\n  }\r\n  isAuthenticated() {\r\n    return this.authenticated;\r\n  }\r\n}\r\nexport default new Auth();","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Auth from '../../Auth/Authentication'\r\nfunction PersonForm(props) {\r\n  const [state, setState] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    mobile: \"\",\r\n    profilePic: \"\",\r\n    multiple: false,\r\n    persons: [],\r\n\r\n  })\r\n  const handleCheck = (e) => {\r\n    const { checked } = e.target\r\n    console.log(checked)\r\n    setState(prevState => ({\r\n      ...prevState,\r\n      multiple: checked,\r\n      'successMessage': ''\r\n\r\n    }))\r\n  }\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target\r\n    console.log(value)\r\n    setState(prevState => ({\r\n      ...prevState,\r\n      [id]: value,\r\n      'successMessage': ''\r\n\r\n    }))\r\n  }\r\n\r\n\r\n  const handleSubmitClick = (e) => {\r\n\r\n    e.preventDefault();\r\n    console.log(state.profilePic)\r\n    if (state.name.length && state.mobile.length && state.email.length && state.profilePic != \"\") {\r\n      const formData = new FormData()\r\n      formData.append(\r\n        state.mobile + \"_\" + state.profilePic.name,\r\n        state.profilePic,\r\n        state.mobile + \"_\" + state.profilePic.name\r\n      )\r\n\r\n      const payload = {\r\n        \"name\": state.name,\r\n        \"mobile\": state.mobile,\r\n        \"email\": state.email,\r\n        \"profilePic\": state.mobile + \"_\" + state.profilePic.name\r\n        ,\r\n        \"file\": formData,\r\n\r\n      }\r\n      if (state.multiple == true) {\r\n\r\n        setState(prevState => ({\r\n          ...prevState,\r\n          persons: state.persons.concat(payload),\r\n\r\n        }))\r\n\r\n        return;\r\n      }\r\n      console.log(payload)\r\n\r\n      axios.post(\"https://putforshare.herokuapp.com/addPerson/\", payload)\r\n        .then(function (response) {\r\n          console.log(response)\r\n          if (response.status === 200) {\r\n            if (response.data == \"true\") {\r\n              axios.post(\"https://putforshare.herokuapp.com/set-image/\", payload[\"file\"]).then(function (res) { console.log(res) }).catch(function (error) {\r\n                alert(error);\r\n              });\r\n\r\n              setState(prevState => ({\r\n                ...prevState,\r\n                'successMessage': 'Data sent successfully.'\r\n              }))\r\n\r\n            } else {\r\n              setState(prevState => ({\r\n                ...prevState,\r\n                'successMessage': 'failed to add'\r\n              }))\r\n            }\r\n\r\n          } else {\r\n\r\n            setState(prevState => ({\r\n              ...prevState,\r\n              'successMessage': 'failed to add'\r\n            }))\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n          alert(error);\r\n        });\r\n    } else {\r\n      alert(\"All fields are mandatory\");\r\n    }\r\n\r\n  }\r\n  const handleMultiplePersonClick = (e) => {\r\n    e.preventDefault();\r\n\r\n    const payload = state.persons\r\n    console.log(payload)\r\n    var images = new FormData()\r\n    for (var i in payload) {\r\n      var person = payload[i][\"file\"];\r\n      for (var pair of person.entries()) {\r\n        console.log(pair[0] + ', ' + pair[1]);\r\n        images.append(\r\n          pair[0],\r\n          pair[1],\r\n          pair[0]\r\n\r\n        )\r\n      }\r\n\r\n    }\r\n    console.log(images)\r\n    if (payload.length) {\r\n\r\n      axios.post(\"https://putforshare.herokuapp.com/addManyPerson/\", payload)\r\n        .then(function (response) {\r\n          console.log(response)\r\n          if (response.status === 200) {\r\n            if (response.data == \"true\") {\r\n\r\n              axios.post(\"https://putforshare.herokuapp.com/set-image/\", images).then(function (res) { console.log(res) }).catch(function (error) {\r\n                alert(error);\r\n              });\r\n              setState(prevState => ({\r\n                ...prevState,\r\n                'successMessage': 'Data sent successfully.'\r\n              }))\r\n\r\n            } else {\r\n              setState(prevState => ({\r\n                ...prevState,\r\n                'successMessage': 'failed to add'\r\n              }))\r\n            }\r\n\r\n          } else {\r\n\r\n            setState(prevState => ({\r\n              ...prevState,\r\n              'successMessage': 'failed to add'\r\n            }))\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n          alert(error);\r\n        });\r\n    } else {\r\n      alert(\"Empty list\");\r\n    }\r\n\r\n  }\r\n  const fileChangedHandler = (event) => {\r\n    const file = event.target.files[0]\r\n    console.log(file.type);\r\n    if (file.type === \"image/jpeg\" || file.type === \"image/png\") {\r\n      setState(prevState => ({\r\n        ...prevState,\r\n        profilePic: file,\r\n        'successMessage': ''\r\n\r\n      }))\r\n    } else {\r\n      alert(\"Only jpg and png files allowed\");\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row py-5  justify-content-lg-around\">\r\n        <div className=\"pb-5  border bg-white col-lg-4 \">\r\n\r\n          <form className=\"p-3\" >\r\n            <div className=\"form-group form-check\">\r\n              <input checked={state.multiple} onChange={handleCheck} type=\"checkbox\" className=\"form-check-input\" id=\"multiple\" />\r\n              <label className=\"form-check-label\" htmlFor=\"multiple\">Add many person</label>\r\n            </div>\r\n            <div className=\"form-group text-left\">\r\n\r\n              <label htmlFor=\"name\">Name</label>\r\n              <input type=\"text\" className=\"form-control\"\r\n                value={state.name}\r\n                id=\"name\"\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group text-left\">\r\n\r\n              <label htmlFor=\"mobile\">Mobile</label>\r\n              <input type=\"number\" className=\"form-control\"\r\n                value={state.mobile}\r\n                id=\"mobile\"\r\n\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group text-left\">\r\n\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input type=\"email\" className=\"form-control\"\r\n                value={state.email}\r\n                id=\"email\"\r\n\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group text-left\">\r\n              <label htmlFor=\"profilePic\">Profile Picture</label>\r\n              {/* <input type=\"text\" className=\"form-control\"\r\n                value={state.profilePic}\r\n                id=\"profilePic\"\r\n                onChange={handleChange}\r\n              /> */}\r\n              <input className=\"form-control\" type=\"file\" onChange={fileChangedHandler} />\r\n              {/* <button onClick={this.uploadHandler}>Upload!</button> */}\r\n            </div>\r\n\r\n            <button type=\"submit\" className=\"btn btn-primary btn-block\"\r\n              onClick={handleSubmitClick}\r\n            >Submit</button>\r\n          </form>\r\n          <div className=\"alert alert-success mt-2\" style={{ display: state.successMessage ? 'block' : 'none' }} role=\"alert\">\r\n            {state.successMessage}\r\n          </div>\r\n        </div>\r\n        {state.multiple == true ? <div className=\"pb-5  border bg-white col-lg-4 \">\r\n          <button type=\"submit\" className=\"btn btn-success btn\"\r\n            onClick={handleMultiplePersonClick}\r\n          >Add all</button>\r\n          {state.persons.map(function (item) {\r\n            return <div key={state.persons.indexOf(item)} >\r\n              <p>{item.profilePic} </p>\r\n              <p>{item.name}</p>\r\n              <p>{item.mobile}</p>\r\n              <p>{item.email}</p>\r\n            </div>\r\n          })}</div> : null}\r\n      </div>\r\n      <div className=\"row justify-content-lg-between\">\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PersonForm;","import React, { useState, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Auth from '../../Auth/Authentication';\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport axios from 'axios';\r\nimport PersonForm from '../Form/PersonForm'\r\nfunction Home(props) {\r\n  const [state, setState] = useState({\r\n    persons: [],\r\n  });\r\n\r\n  const redirectToLogin = () => {\r\n\r\n    props.history.push('/login');\r\n  }\r\n  const handleSubmitClick = (e) => {\r\n    console.log(Auth.isAuthenticated());\r\n    e.preventDefault();\r\n    Auth.logout(() => {\r\n      console.log(Auth.isAuthenticated());\r\n      redirectToLogin();\r\n    })\r\n  }\r\n\r\n  const getAllPersons = () => {\r\n    axios.get(\"https://putforshare.herokuapp.com/getAllPerson/\")\r\n      .then(function (response) {\r\n        console.log(response.data);\r\n        setState(prevState => ({\r\n          ...prevState,\r\n\r\n          persons: response.data[\"persons\"]\r\n\r\n        }))\r\n      })\r\n      .catch(function (error) {\r\n        alert(error);\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    getAllPersons();\r\n    // do stuff here...\r\n  }, [])\r\n  return (\r\n    <div >\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          Put For Share\r\n        </a>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav mr-auto\">\r\n          </ul>\r\n\r\n          <button type=\"submit\" className=\"btn btn-danger \"\r\n            onClick={handleSubmitClick}\r\n          >Logout</button>\r\n\r\n        </div>\r\n      </nav>\r\n      <div className=\"container bg-light my-5\">\r\n        <Tabs\r\n\r\n          onSelect={(index) => {\r\n            if (index == 0) {\r\n              getAllPersons();\r\n            } else {\r\n              console.log(index);\r\n\r\n            }\r\n          }}>\r\n          <TabList>\r\n            <Tab >Show Person</Tab>\r\n            <Tab>Add Person</Tab>\r\n\r\n          </TabList>\r\n\r\n          <TabPanel>\r\n            <div className=\"row justify-content-lg-between\">\r\n              {state.persons.map(function (item) {\r\n                return <div key={state.persons.indexOf(item)} className=\"col-lg-6  bg-light\" >\r\n                  <img src={`https://putforshare.herokuapp.com/get-image/${item.profilePic}`}\r\n\r\n                    height='100' width='100'></img>\r\n                  <h1>{item.name}</h1>\r\n                  <p>{item.mobile}</p>\r\n                  <p>{item.email}</p>\r\n                </div>\r\n              })}\r\n            </div>\r\n          </TabPanel>\r\n          <TabPanel>\r\n\r\n            <PersonForm />\r\n\r\n          </TabPanel>\r\n\r\n        </Tabs>\r\n\r\n      </div>\r\n\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default withRouter(Home);","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Auth from '../../Auth/Authentication'\r\nfunction Form(props) {\r\n  const [state, setState] = useState({\r\n    username: \"\",\r\n    password: \"\"\r\n  })\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target\r\n    setState(prevState => ({\r\n      ...prevState,\r\n      [id]: value,\r\n      'successMessage': ''\r\n\r\n    }))\r\n  }\r\n  const redirectToHome = () => {\r\n\r\n    props.history.push('/home');\r\n  }\r\n\r\n  const handleSubmitClick = (e) => {\r\n    e.preventDefault();\r\n    if (state.username.length && state.password.length) {\r\n\r\n      const payload = {\r\n        \"uname\": state.username,\r\n        \"pass\": state.password,\r\n      }\r\n      axios.post(\"https://putforshare.herokuapp.com/login/\", payload)\r\n        .then(function (response) {\r\n          console.log(response)\r\n          if (response.status === 200) {\r\n            if (response.data == \"true\") {\r\n\r\n\r\n              setState(prevState => ({\r\n                ...prevState,\r\n                'successMessage': 'Login successful.'\r\n              }))\r\n              console.log(Auth.isAuthenticated());\r\n              Auth.login(() => {\r\n                console.log(Auth.isAuthenticated());\r\n                redirectToHome();\r\n              })\r\n            } else {\r\n              setState(prevState => ({\r\n                ...prevState,\r\n                'successMessage': 'Login failed.'\r\n              }))\r\n            }\r\n\r\n          } else {\r\n\r\n            setState(prevState => ({\r\n              ...prevState,\r\n              'successMessage': 'Login failed.'\r\n            }))\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n          alert(error);\r\n        });\r\n    } else {\r\n\r\n    }\r\n\r\n  }\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row justify-content-lg-around my-5\">\r\n        <div className=\"pb-5 border bg-white col-lg-4 \">\r\n\r\n          <form className=\"p-3\" >\r\n            <div className=\"text-center\">\r\n              <h1 className=\"display-4 mb-4\">Login</h1>\r\n            </div>\r\n\r\n            <div className=\"form-group text-left\">\r\n\r\n              <label htmlFor=\"username\">Username</label>\r\n              <input type=\"text\" className=\"form-control\"\r\n                value={state.username}\r\n                id=\"username\"\r\n\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group text-left\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input type=\"password\" className=\"form-control\"\r\n                value={state.password}\r\n                id=\"password\"\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n\r\n            <button type=\"submit\" className=\"btn btn-primary btn-block\"\r\n              onClick={handleSubmitClick}\r\n            >Submit</button>\r\n          </form>\r\n          <div className=\"alert alert-success mt-2\" style={{ display: state.successMessage ? 'block' : 'none' }} role=\"alert\">\r\n            {state.successMessage}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withRouter(Form);","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport Auth from '../Auth/Authentication';\r\nexport const ProtectedRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n\r\n      {...rest}\r\n      render={\r\n        props => {\r\n          if (Auth.isAuthenticated()) {\r\n            console.log(Auth.isAuthenticated())\r\n            return <Component {...props} />\r\n          } else {\r\n            return <Redirect to={\r\n              {\r\n                pathname: '/login',\r\n\r\n                state: {\r\n                  from: props.location\r\n                }\r\n              }\r\n            } />\r\n          }\r\n        }\r\n      }\r\n    />\r\n  )\r\n}","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport Auth from '../Auth/Authentication';\r\nexport const ProtectedRouteLogin = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n\r\n      {...rest}\r\n      render={\r\n        props => {\r\n          if (!Auth.isAuthenticated()) {\r\n            console.log(Auth.isAuthenticated())\r\n            return <Component {...props} />\r\n          } else {\r\n            return <Redirect to={\r\n              {\r\n                pathname: '/home',\r\n\r\n                state: {\r\n                  from: props.location\r\n                }\r\n              }\r\n            } />\r\n          }\r\n        }\r\n      }\r\n    />\r\n  )\r\n}","import React from 'react';\nimport './App.css';\nimport Home from './components/Home/Home';\nimport Form from './components/Form/Form';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport { ProtectedRoute } from './ProtectedRoute/ProtectedRoute';\nimport { ProtectedRouteLogin } from './ProtectedRoute/ProtectedRouteLogin';\n\nfunction App() {\n\n  return (\n    <Router>\n      <div className=\"App\">\n\n        <Switch>\n          <ProtectedRouteLogin exact path=\"/login\"\n\n            component={Form}\n          />\n\n          <ProtectedRoute exact path=\"/home\"\n\n            component={Home}\n          />\n\n          <Route path=\"*\" component={() => <h1 className=\"display-4\" style={{ color: \"blue\", backgroundColor: \"InfoBackground\" }}>404 Not Found</h1>} />\n\n        </Switch>\n      </div>\n\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}